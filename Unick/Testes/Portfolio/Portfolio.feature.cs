// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Unick.Testes.Portfolio
{
    using TechTalk.SpecFlow;
    using Autofac;
    using Autofac.Configuration;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Portfolio")]
    [NUnit.Framework.ParallelizableAttribute()]
    public partial class PortfolioFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private OpenQA.Selenium.IWebDriver driver;
        
        private IContainer container;
        
        [NUnit.Framework.OneTimeSetUp()]
        public virtual void FeatureSetup()
        {
            var builder = new ContainerBuilder();
            builder.RegisterModule(new ConfigurationSettingsReader());
            container = builder.Build();
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Portfolio", "\tEu como cliente, preciso acessar a área de portfolio do site para que seja possí" +
                    "vel \r\n\tanálisar os trabalhos realizados e efetuar um possível contato", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDown()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            try {((Unickq.SpecFlow.Selenium.WebDriverGrid.PaidWebDriver) driver).UpdateTestResult();} catch (System.Exception) {}
            try {System.Threading.Thread.Sleep(50); driver.Quit(); } catch (System.Exception) {}
            driver = null;
            try {testRunner.ScenarioContext.Remove("Driver");} catch (System.NullReferenceException) {}
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
            testRunner.Given("que eu esteja no site jobmidia", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
            testRunner.And("navego em portfolio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Análise do portfolio")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void AnaliseDoPortfolio()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Análise do portfolio", new string[] {
                        "mytag"});
            this.ScenarioSetup(scenarioInfo);
            this.FeatureBackground();
            testRunner.When("clico na imagem do preview", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
            testRunner.And("é exibido o trabalho maximizado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
            testRunner.When("clico em fechar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
            testRunner.Then("retorno para a exibição do portfolio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
